



function startTyping(lines){

    // Configuration
    const config = {
        typingSpeed: 50,
        eraseSpeed: 30,
        delayBeforeErasing: 2000,
        delayBetweenLines: 1000
    }; 

     // Get DOM element and convert data to array
    const textElement = document.getElementById('typing-text');
    let currentLineIndex = 0;

    // Main function to handle the typing animation cycle
    function animateTyping() {
        // Set the appropriate style
        textElement.className = 'typing-text ' + 
            (currentLineIndex % 2 === 0 ? 'style-1' : 'style-2');
        
        // Get current line text
        const currentText = lines[currentLineIndex];
        
        // Type the current line
        typeText(currentText, 0);
    }

     // Function to type text character by character
     function typeText(text, index) {
        if (index <= text.length) {
            textElement.textContent = text.substring(0, index);
         
            if (index === text.length) {
                // Add cursor when typing is complete
                const cursor = document.createElement('span');
                cursor.className = 'cursor';
                textElement.appendChild(cursor);
                        
                // Wait before erasing
                setTimeout(() => {
                    eraseText(text, text.length);
                }, config.delayBeforeErasing);

            } else {
                    // Continue typing
                    setTimeout(() => {
                        typeText(text, index + 1);
                    }, config.typingSpeed);
            }
            }
    }

     // Function to erase text character by character
    function eraseText(text, index) {
        if (index > 0) {
            textElement.textContent = text.substring(0, index - 1);
            setTimeout(() => {
                eraseText(text, index - 1);
            }, config.eraseSpeed);
        } else {
            // Move to next line
            currentLineIndex = (currentLineIndex + 1) % lines.length;
            
            // Wait before typing next line
            setTimeout(animateTyping, config.delayBetweenLines);
        }
    }

    // starting typing effect 
    animateTyping()
}

// class="iso-pro"
let svgFrontEndData={

    html : `   <!-- html  -->

            <span></span>
            <span></span>
            <span></span>
                <svg viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                    <path d="M0 32l34.9 395.8L191.5 480l157.6-52.2L384 32H0zm308.2 127.9H124.4l4.1 49.4h175.6l-13.6 148.4-97.9 27v.3h-1.1l-98.7-27.3-6-75.8h47.7L138 320l53.5 14.5 53.7-14.5 6-62.2H84.3L71.5 112.2h241.1l-4.4 47.7z"></path>
                </svg>
            <div class="text">HTML5</div>
    `,
    css : `   <!-- css  -->
          <span></span>
          <span></span>
          <span></span>

              <svg viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                  <path d="M0 32l34.9 395.8L192 480l157.1-52.2L384 32H0zm313.1 80l-4.8 47.3L193 208.6l-.3.1h111.5l-12.8 146.6-98.2 28.7-98.8-29.2-6.4-73.9h48.9l3.2 38.3 52.6 13.3 54.7-15.4 3.7-61.6-166.3-.5v-.1l-.2.1-3.6-46.3L193.1 162l6.5-2.7H76.7L70.9 112h242.2z"></path>
              </svg>
     
          <div class="text">CSS3</div>
`,
    javascript : ` <!-- JavaScript  -->
          <span></span>
          <span></span>
          <span></span>
              <svg viewBox="0 0 448 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                  <path d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM243.8 381.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z"></path>
              </svg>
          
          <div class="text">JavaScript</div>
`,
    bootstrap : ` <!-- bootstrap  -->
          <span></span>
          <span></span>
          <span></span>
              <svg viewBox="0 0 576 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                  <path d="M333.5,201.4c0-22.1-15.6-34.3-43-34.3h-50.4v71.2h42.5C315.4,238.2,333.5,225,333.5,201.4z M517,188.6 c-9.5-30.9-10.9-68.8-9.8-98.1c1.1-30.5-22.7-58.5-54.7-58.5H123.7c-32.1,0-55.8,28.1-54.7,58.5c1,29.3-0.3,67.2-9.8,98.1 c-9.6,31-25.7,50.6-52.2,53.1v28.5c26.4,2.5,42.6,22.1,52.2,53.1c9.5,30.9,10.9,68.8,9.8,98.1c-1.1,30.5,22.7,58.5,54.7,58.5h328.7 c32.1,0,55.8-28.1,54.7-58.5c-1-29.3,0.3-67.2,9.8-98.1c9.6-31,25.7-50.6,52.1-53.1v-28.5C542.7,239.2,526.5,219.6,517,188.6z M300.2,375.1h-97.9V136.8h97.4c43.3,0,71.7,23.4,71.7,59.4c0,25.3-19.1,47.9-43.5,51.8v1.3c33.2,3.6,55.5,26.6,55.5,58.3 C383.4,349.7,352.1,375.1,300.2,375.1z M290.2,266.4h-50.1v78.4h52.3c34.2,0,52.3-13.7,52.3-39.5 C344.7,279.6,326.1,266.4,290.2,266.4z"></path>
              </svg>
          <div class="text">Bootstrap</div>
`,
    react : ` <!-- react js  -->
        <span></span>
        <span></span>
        <span></span>
            <svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                <path d="M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1.9-3.7 1.7-7.4 2.5-11.1 12.3-59.6 4.2-107.5-23.1-123.3-26.3-15.1-69.2.6-112.6 38.4-4.3 3.7-8.5 7.6-12.5 11.5-2.7-2.6-5.5-5.2-8.3-7.7-45.5-40.4-91.1-57.4-118.4-41.5-26.2 15.2-34 60.3-23 116.7 1.1 5.6 2.3 11.1 3.7 16.7-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5 4.5 1.5 9 3 13.6 4.3-1.5 6-2.8 11.9-4 18-10.5 55.5-2.3 99.5 23.9 114.6 27 15.6 72.4-.4 116.6-39.1 3.5-3.1 7-6.3 10.5-9.7 4.4 4.3 9 8.4 13.6 12.4 42.8 36.8 85.1 51.7 111.2 36.6 27-15.6 35.8-62.9 24.4-120.5-.9-4.4-1.9-8.9-3-13.5 3.2-.9 6.3-1.9 9.4-2.9 57.7-19.1 99.5-50 99.5-81.7 0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36 16.9 9.7 23.4 48.9 12.8 100.4-.7 3.4-1.4 6.7-2.3 10-22.2-5-44.7-8.6-67.3-10.6-13-18.6-27.2-36.4-42.6-53.1 3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9-15.6-1.7-31.1-4.2-46.4-7.5 4.4-14.4 9.9-29.3 16.3-44.5 4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8-5.3 8.3-10.5 16.8-15.4 25.4-4.9 8.5-9.7 17.2-14.2 26-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8-7.6 13.3-15.7 26.2-24.2 39-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7 6.4 14.5 12 29.2 16.9 44.3-15.5 3.5-31.2 6.2-47 8 5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2-4.9-8.5-10-16.9-15.3-25.2 16.1 2 31.5 4.7 45.9 8-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8-19.8-.9-39.7-.9-59.5 0 9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39 2.5 2.2 5 4.6 7.6 7-15.5 16.7-29.8 34.5-42.9 53.1-22.6 2-45 5.5-67.2 10.4-1.3-5.1-2.4-10.3-3.5-15.5-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9-21.3-6.7-45.5-17.3-63-31.2-10.1-7-16.9-17.8-18.8-29.9 0-18.3 31.6-41.7 77.2-57.6 5.7-2 11.5-3.8 17.3-5.5 6.8 21.7 15 43 24.5 63.6-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3-11.1 5.3-23.9 5.8-35.3 1.3-15.9-9.2-22.5-44.5-13.5-92 1.1-5.6 2.3-11.2 3.7-16.7 22.4 4.8 45 8.1 67.9 9.8 13.2 18.7 27.7 36.6 43.2 53.4-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3 9.6.4 19.5.6 29.5.6 10.3 0 20.4-.2 30.4-.7-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3-15.9 9.2-49.8-2.8-86.4-34.2-4.2-3.6-8.4-7.5-12.7-11.5 15.3-16.9 29.4-34.8 42.2-53.6 22.9-1.9 45.7-5.4 68.2-10.5 1 4.1 1.9 8.2 2.7 12.2 4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6-7-21.8-15.6-43.1-25.5-63.8 9.6-20.4 17.7-41.4 24.5-62.9 5.2 1.5 10.2 3.1 15 4.7 46.6 16 79.3 39.8 79.3 58 0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z"></path>
            </svg>
        <div class="text">React.js</div>`
}

let svgBackEndData = {

    java : `          <!-- java  -->
          <li class="iso-pro">
            <span></span>
            <span></span>
            <span></span>
                <svg viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                    <path d="M277.74 312.9c9.8-6.7 23.4-12.5 23.4-12.5s-38.7 7-77.2 10.2c-47.1 3.9-97.7 4.7-123.1 1.3-60.1-8 33-30.1 33-30.1s-36.1-2.4-80.6 19c-52.5 25.4 130 37 224.5 12.1zm-85.4-32.1c-19-42.7-83.1-80.2 0-145.8C296 53.2 242.84 0 242.84 0c21.5 84.5-75.6 110.1-110.7 162.6-23.9 35.9 11.7 74.4 60.2 118.2zm114.6-176.2c.1 0-175.2 43.8-91.5 140.2 24.7 28.4-6.5 54-6.5 54s62.7-32.4 33.9-72.9c-26.9-37.8-47.5-56.6 64.1-121.3zm-6.1 270.5a12.19 12.19 0 0 1-2 2.6c128.3-33.7 81.1-118.9 19.8-97.3a17.33 17.33 0 0 0-8.2 6.3 70.45 70.45 0 0 1 11-3c31-6.5 75.5 41.5-20.6 91.4zM348 437.4s14.5 11.9-15.9 21.2c-57.9 17.5-240.8 22.8-291.6.7-18.3-7.9 16-19 26.8-21.3 11.2-2.4 17.7-2 17.7-2-20.3-14.3-131.3 28.1-56.4 40.2C232.84 509.4 401 461.3 348 437.4zM124.44 396c-78.7 22 47.9 67.4 148.1 24.5a185.89 185.89 0 0 1-28.2-13.8c-44.7 8.5-65.4 9.1-106 4.5-33.5-3.8-13.9-15.2-13.9-15.2zm179.8 97.2c-78.7 14.8-175.8 13.1-233.3 3.6 0-.1 11.8 9.7 72.4 13.6 92.2 5.9 233.8-3.3 237.1-46.9 0 0-6.4 16.5-76.2 29.7zM260.64 353c-59.2 11.4-93.5 11.1-136.8 6.6-33.5-3.5-11.6-19.7-11.6-19.7-86.8 28.8 48.2 61.4 169.5 25.9a60.37 60.37 0 0 1-21.1-12.8z"></path>
                </svg>
            <div class="text">Java</div>
          </li>`,

    springBoot : `          <!-- spring boot  -->
      <li class="iso-pro">
        <span></span>
        <span></span>
        <span></span>
            <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="svg">
                <path d="M20.59 5.41a10.28 10.28 0 0 1 .32 7.9 9.41 9.41 0 0 1-5.8 5.47 10.27 10.27 0 0 1-7.9-.32A9.39 9.39 0 0 1 1.74 13a10.28 10.28 0 0 1 .32-7.9 9.41 9.41 0 0 1 5.65-5.51 10.28 10.28 0 0 1 7.9.32A9.4 9.4 0 0 1 20.59 5.41M4.46 12.29l.11.08c-.05-.09-.08-.11-.11-.08m15.78-.99c-2.95 3.92-9.35 1.83-13.38 1.97 0 0-.72.04-1.45.16 0 0 .27-.11.62-.24 2.84-.99 4.18-1.19 5.91-2.08a10.24 10.24 0 0 0 5.83-5.54s1.03 3.46-2.48 8.98l.11-.08c.42-.64 1.2-3.27-.16-6.78-.93-2.45-3.62-4.64-3.62-4.64 1.4 2.16.96 5.97.96 5.97-.28-1.95-2.68-3.5-2.68-3.5.89 2.74-2.3 6.02-3.35 7.29-1.86 2.34-3.5 4.26-3.5 4.26s-.74-1.34-.46-3.5c.18-1.4 1.19-3.17 1.19-3.17-1.72.46-1.79 3.52-1.79 3.52-.18-2.3 1.33-4.48 1.33-4.48-1.72 1.03-3.2 4.42-3.2 4.42-.32-2.24.69-3.99.69-3.99-1.32.5-2.6 3.53-2.6 3.53-.18-2.33.97-4.5.97-4.5-3.5 2.5-3.29 7.33-3.29 7.33-.11-4.03 2.5-7.67 6.1-9.57 3.58-1.86 7.8-1.55 11.03.83 1.1.82 3.66 3.06 3.66 7.96z"></path>
            </svg>
        <div class="text">Spring Boot</div>
    </li>`,

    mysql : `  <!-- mysql  -->
  <li class="iso-pro">
    <span></span>
    <span></span>
    <span></span>
        <svg viewBox="0 0 448 512" xmlns="http://www.w3.org/2000/svg" class="svg">
            <path d="M448 80v48c0 44.2-100.3 80-224 80S0 172.2 0 128V80C0 35.8 100.3 0 224 0S448 35.8 448 80zM393.2 214.7c20.8-7.4 39.9-16.9 54.8-28.6V288c0 44.2-100.3 80-224 80S0 332.2 0 288V186.1c14.9 11.8 34 21.2 54.8 28.6C99.7 230.7 159.5 240 224 240s124.3-9.3 169.2-25.3zM0 346.1c14.9 11.8 34 21.2 54.8 28.6C99.7 390.7 159.5 400 224 400s124.3-9.3 169.2-25.3c20.8-7.4 39.9-16.9 54.8-28.6V432c0 44.2-100.3 80-224 80S0 476.2 0 432V346.1z"></path>
        </svg>
    <div class="text">MySQL</div>
</li>`,

    sql : `    <!-- sql  -->
    <li class="iso-pro">
      <span></span>
      <span></span>
      <span></span>
          <svg viewBox="0 0 448 512" xmlns="http://www.w3.org/2000/svg" class="svg">
              <path d="M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z"></path>
          </svg>
      <div class="text">SQL</div>
  </li>`,

    mongoDB : `<!-- mongoDb  -->
<li class="iso-pro">
  <span></span>
  <span></span>
  <span></span>
      <svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" class="svg">
          <path d="M256 153.9A98.1 98.1 0 1 0 354.1 252 98.1 98.1 0 0 0 256 153.9zm0 179.2A81.1 81.1 0 1 1 337.1 252 81.18 81.18 0 0 1 256 333.1zm0-194.2a25 25 0 1 0 25 25 25 25 0 0 0-25-25zm0 42a17 17 0 1 1 17-17 17 17 0 0 1-17 17zm0-246.9C132.3 0 32 100.3 32 224c0 57.23 21.68 109.5 57.16 149.12l3.47 3.87c23.77 26.5 52.93 46.59 85.2 58.58l2.68 1c30.42 9.62 62.69 14.76 95.49 14.76s65.07-5.14 95.49-14.76l2.68-1c32.27-12 61.43-32.08 85.2-58.58l3.47-3.87C499.32 333.5 521 281.23 521 224 520 100.3 419.7 0 256 0zm209.77 371.39c-22.82 25.73-51.29 46-83.28 58.21l-2.74 1c-30.15 9.56-62.4 14.5-95 14.5s-64.85-4.94-95-14.5l-2.74-1c-32-12.26-60.46-32.48-83.28-58.21l-3.57-4C68.68 329.64 48 279 48 224 48 109.45 141.45 16 256 16s208 93.45 208 208c0 55-20.68 105.64-51.77 143.39z"></path>
          <path d="M256 106.85c-30.09 0-54.55 24.5-54.55 54.55 0 30.09 24.46 54.55 54.55 54.55s54.55-24.5 54.55-54.55c0-30.09-24.46-54.55-54.55-54.55zm0 93.1c-21.3 0-38.55-17.25-38.55-38.55s17.25-38.55 38.55-38.55 38.55 17.25 38.55 38.55-17.25 38.55-38.55 38.55z"></path>
      </svg>
  <div class="text">MongoDB</div>
</li>`,

    node : `          <!-- node js  -->
          <li class="iso-pro">
            <span></span>
            <span></span>
            <span></span>
                <svg viewBox="0 0 448 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                    <path d="M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z"></path>
                </svg>
            </a>
            <div class="text">Node.js</div>
        </li>`,

    express : `        <!-- express js  -->
        <li class="iso-pro">
          <span></span>
          <span></span>
          <span></span>
              <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" class="svg">
                  <path d="M32 24.795c-1.164.296-1.884.013-2.53-.957l-4.594-6.356-.664-.88-5.365 7.257c-.613.873-1.256 1.253-2.4.944l6.87-9.222-6.396-8.33c1.1-.214 1.86-.105 2.535.88l4.765 6.435 4.8-6.4c.615-.873 1.276-1.205 2.38-.883l-2.48 3.288-3.36 4.375c-.4.5-.345.842.023 1.325L32 24.795zM.008 15.427l.975-5.248c.336-1.61 1.142-2.167 2.89-2.167h4.264c1.748 0 2.554.558 2.89 2.167l.976 5.248c.34 1.687-.236 2.37-1.832 2.37h-8.33c-1.596 0-2.172-.683-1.832-2.37zm8.582-.578c.23-1.034.23-2.03 0-3.058-.192-.85-.637-1.08-1.552-1.08H3.792c-.915 0-1.36.23-1.552 1.08a7.41 7.41 0 0 0 0 3.058c.154.786.538 1.033 1.552 1.033h3.246c1.014 0 1.398-.247 1.552-1.033z"></path>
              </svg>
          <div class="text">Express.js</div>
      </li>`,

    python : `          <!-- Python -->
          <li class="iso-pro">
            <span></span>
            <span></span>
            <span></span>
                <svg viewBox="0 0 448 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                    <path d="M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z"></path>
                </svg>
            <div class="text">Python</div>
        </li>`,

    c : `        <!-- c language -->
        <li class="iso-pro">
          <span></span>
          <span></span>
          <span></span>
              <svg viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" class="svg">
                  <path d="M304.1 256C304.1 250 310 244.1 316 244.1C322 244.1 328 250 328 256C328 262 322 268 316 268C310 268 304.1 262 304.1 256zM314.4 159.1C282.4 159.1 255.1 186.5 255.1 218.4V293.6C255.1 325.5 282.4 352 314.4 352C342.3 352 366.4 331.3 372.9 304H349.9C343.9 319.1 330.4 328 314.4 328C295.5 328 279.1 312.5 279.1 293.6V218.4C279.1 199.5 295.5 184 314.4 184C330.4 184 343.9 192.9 349.9 208H372.9C366.4 180.7 342.3 159.1 314.4 159.1zM226.4 159.1C194.4 159.1 167.1 186.5 167.1 218.4V293.6C167.1 325.5 194.4 352 226.4 352C254.3 352 278.4 331.3 284.9 304H261.9C255.9 319.1 242.4 328 226.4 328C207.5 328 191.1 312.5 191.1 293.6V218.4C191.1 199.5 207.5 184 226.4 184C242.4 184 255.9 192.9 261.9 208H284.9C278.4 180.7 254.3 159.1 226.4 159.1zM162.7 214.8L106.3 142.7C100.1 134.5 89.32 132.2 80.95 137.5C72.58 142.8 70.33 154.5 75.65 162.8L114.5 217.5L75.5 272.3C70.17 280.6 72.42 292.3 80.79 297.6C89.16 302.9 100.9 300.6 106.2 292.4L162.7 220.2C166.8 214.4 166.8 220.6 162.7 214.8z"></path>
              </svg>
          <div class="text">C</div>
      </li>`,
}

 // Start the animation when page loads
//  window.addEventListener('DOMContentLoaded',startTyping());

let year = document.getElementById("year");
let currentYear = new Date().getFullYear();
year.innerText=currentYear;

// getting data from json file 

 fetch("./src/data.json")
   .then(response => response.json())
   .then(data => {
    // console.log(data)
     initialize(data); // here you need initialize everthing now
   });
 
function initialize(data){

    for(let d in data){
        if(d == "home"){
            home(data[d]);
        }
        else if(d == "about"){
            about(data[d]);
        }
        else if( d == "education"){
            education(data[d]);
        }
        else if( d == "skills"){
            skills(data[d]);
        }
        else if( d == "projects"){
            projects(data[d]);
        }
        else if( d == "contact"){
            contact(data[d]);
        }
        else if( d == "footer"){
            footer(data[d]);
        }
    }

}

function iconCode(type,link){
    switch(type){
        case "github" :
            return `<a href=${link} target="_blank">
                  <svg viewBox="0 0 24 24" class="socialSvg"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
                <svg viewBox="0 0 24 24" class="socialSvg"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
                </a>`
        case "linkedin" :
            return  ` <a href=${link} target="_blank">
                  <svg class="socialSvg" viewBox="0 0 448 512">
                    <path
                      d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z"
                    ></path>
                  </svg>
                  <svg class="socialSvg" viewBox="0 0 448 512">
                    <path
                      d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z"
                    ></path>
                  </svg>
                </a>`

        case "instagram" :
            return `<a href=${link} target="_blank">
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z"
                    ></path>
                  </svg>
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z"
                    ></path>
                  </svg>
                </a>`
        case "twitter" :
            return `<a href=${link} target="_blank">
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
                    ></path>
                  </svg>
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
                    ></path>
                  </svg>
                </a>`;
        
        case "whatsapp" :
            return `<a href=${link} target="_blank">
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z"
                    ></path>
                  </svg>
                  <svg class="socialSvg" viewBox="0 0 16 16">
                    <path
                      d="M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z"
                    ></path>
                  </svg>
                </a>`;
    }
}
 
function footer(footerData){
    console.log(footerData)
    let footer_div = document.getElementById("footer-div");
    for(let key in footerData){
        footer_div.innerHTML += iconCode(key,footerData[key]);
    }
}

function contact(contactData){
    // console.log(contactData)
    // console.log(contactData['form'])
    let form = document.getElementById("contact-form");
    form.action = contactData['form'];
}

let projectsSvg = {
    html : `                  <!-- html svg -->
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                    fill="currentColor"
                    version="1.1"
                    viewBox="0 0 512 512"
                    xml:space="preserve"
                    class="svg"
                  >
                    <g id="c133de6af664cd4f011a55de6b0011b2">
                      <path
                        display="inline"
                        d="M30.713,0.501L71.717,460.42l184.006,51.078l184.515-51.15L481.287,0.501H30.713z M395.754,109.646   l-2.567,28.596l-1.128,12.681h-0.187H256h-0.197h-79.599l5.155,57.761h74.444H256h115.723h15.201l-1.377,15.146l-13.255,148.506   l-0.849,9.523L256,413.854v0.012l-0.259,0.072l-115.547-32.078l-7.903-88.566h26.098h30.526l4.016,44.986l62.82,16.965l0.052-0.014   v-0.006l62.916-16.977l6.542-73.158H256h-0.197H129.771l-13.863-155.444l-1.351-15.131h141.247H256h141.104L395.754,109.646z"
                      ></path>
                    </g>
                  </svg>`,

    css : ` <!-- css svg -->
                  <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                  role="img"
                  class="svg"
                >
                  <path
                    d="M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z"
                  ></path>
                </svg>`,
    javascript : `                  <!-- js svg -->
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    xmlns:xlink="http://www.w3.org/1999/xlink"
                    fill="currentColor"
                    version="1.1"
                    viewBox="0 0 512 512"
                    xml:space="preserve"
                    class="svg"
                  >
                    <g id="5151e0c8492e5103c096af88a51e75c7">
                      <path
                        display="inline"
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M1.008,0.5C0.438,0.583,0.48,1.27,0.521,1.958   c0,169.668,0,339.31,0,508.974c169.364,1.135,340.808,0.162,510.979,0.486c0-170.309,0-340.61,0-510.918   C341.342,0.5,171.167,0.5,1.008,0.5z M259.893,452.167c-11.822,11.919-30.478,18.938-53.429,18.938   c-37.643,0-58.543-18.34-71.884-43.711c12.842-8.2,25.966-16.122,39.344-23.795c5.456,15.262,23.886,32.42,44.683,21.857   c13.183-6.699,11.661-27.01,11.661-49.054c0-45.773,0-98.578,0-139.872c-0.042-0.688-0.083-1.375,0.482-1.458   c15.707,0,31.413,0,47.116,0c0,36.788,0,78.402,0,117.529C277.866,395.199,280.91,430.988,259.893,452.167z M470.696,409.917   c-2.674,39.884-35.243,61.063-79.17,61.188c-43.062,0.124-70.624-19.013-87.433-48.567c12.085-8.317,25.778-15.017,38.375-22.822   c10.08,15.761,27.537,30.91,53.429,28.652c16.131-1.406,34.856-14.555,24.285-34.482c-5.127-9.66-17.516-14.567-28.656-19.425   c-35.352-15.424-76.828-29.571-72.861-84.992c1.327-18.514,9.852-31.525,20.889-40.796c11.311-9.5,26.46-15.867,46.629-16.511   c36.629-1.173,56.723,15.12,70.429,37.884c-11.664,8.891-24.514,16.608-37.401,24.281c-4.229-12.995-24.644-25.658-41.772-17.969   c-7.789,3.493-14.788,13.761-10.684,26.224c3.66,11.115,18.589,17.199,30.599,22.344   C433.706,340.486,474.331,355.693,470.696,409.917z"
                      ></path>
                    </g>
                  </svg>`,
    bootstrap : ``,
    react : ``,
    java : ``,
    springBoot : ``,
    mysql : ``,
    sql : ``,
    mongoDB : ``,
    python : ``,
    c : ``,
}

function projects(projectsData){

   let projectsDiv = document.getElementById("projects");

    // console.log(projectsData)

    for(let key in projectsData){

            let card_div = document.createElement("div");

            card_div.classList.add("card");
        
            let outside_div = document.createElement("div");
            outside_div.classList.add("card__img")
        
            // img-div
            let img_div = document.createElement("div");
            img_div.classList.add("card");
        
            // background div
            let backDiv = document.createElement("div");
            backDiv.classList.add("background")
            img_div.appendChild(backDiv);
        
            // logo div
            let logoDiv = document.createElement("div");
            logoDiv.classList.add("logo")
            let img = document.createElement("img");
            img.src =projectsData[key]["pic"] ;
            logoDiv.appendChild(img)
            img_div.appendChild(logoDiv);
        
            // box1 
            let box1 = document.createElement("div");
            box1.classList.add("box")
            box1.classList.add("box1")
            let span = document.createElement("span");
            span.classList.add("programs")
            // now add svg of programs in span 

            for(let value of projectsData[key]["skills"] ){
                span.innerHTML += projectsSvg[value];
            }

            box1.appendChild(span);
            img_div.appendChild(box1);
        
            // box2 
            let box2 = document.createElement("div");
            box2.classList.add("box");
            box2.classList.add("box2");
            let a = document.createElement("a");
            a.href =projectsData[key]["github"] ;
            a.innerHTML = ` <span class="icon">
                            <!-- github svg -->
                            <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" class="svg w-8 hover:scale-125 duration-200 hover:stroke-blue-500"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
                          </span>`
            box2.appendChild(a);
            img_div.appendChild(box2);
        
            // box3
            let box3 = document.createElement("div");
            box3.classList.add("box");
            box3.classList.add("box3");
            let a1 = document.createElement("a");
            a1.href =projectsData[key]["url"] ;
            a1.innerHTML = `<span class="icon">
                            <svg height="18" width="18" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 1024 1024" class="icon svg">
                              <path fill="#ffffff" d="M767.99994 585.142857q75.995429 0 129.462857 53.394286t53.394286 129.462857-53.394286 129.462857-129.462857 53.394286-129.462857-53.394286-53.394286-129.462857q0-6.875429 1.170286-19.456l-205.677714-102.838857q-52.589714 49.152-124.562286 49.152-75.995429 0-129.462857-53.394286t-53.394286-129.462857 53.394286-129.462857 129.462857-53.394286q71.972571 0 124.562286 49.152l205.677714-102.838857q-1.170286-12.580571-1.170286-19.456 0-75.995429 53.394286-129.462857t129.462857-53.394286 129.462857 53.394286 53.394286 129.462857-53.394286 129.462857-129.462857 53.394286q-71.972571 0-124.562286-49.152l-205.677714 102.838857q1.170286 12.580571 1.170286 19.456t-1.170286 19.456l205.677714 102.838857q52.589714-49.152 124.562286-49.152z"></path>
                            </svg>
                          </span>`
            box3.appendChild(a1);
            img_div.appendChild(box3);
        
            outside_div.appendChild(img_div);
            card_div.appendChild(outside_div);

        // second part

            let card_descr_wrapper = document.createElement("div");
            card_descr_wrapper.classList.add("card__descr-wrapper");
        
            let card__title = document.createElement("p");
            card__title.classList.add("card__title");
            card__title.innerText = projectsData[key]["title"] ;
            card_descr_wrapper.appendChild(card__title);
        
            let card__descr = document.createElement("p");
            card__descr.classList.add("card__descr");
            card__descr.innerText =projectsData[key]["description"] ;
             card_descr_wrapper.appendChild(card__descr);
        
            card_div.appendChild(card_descr_wrapper);
            // console.log(card_div)
            projectsDiv.appendChild(card_div);
    }
}

function skills(skillsData){
    // console.log(skillsData)
    let frontend = document.getElementById("frontend")
    let backend = document.getElementById("backend")
    for(let key in skillsData){
        
        if(key == 'frontend'){
            skillsData[key].forEach(element =>{
                let li = document.createElement("li");
                li.innerHTML = svgFrontEndData[element];
                li.classList.add("iso-pro");
                frontend.appendChild(li)
            })
        }
        else{
            skillsData[key].forEach(element =>{
                let li = document.createElement("li");
                li.innerHTML = svgBackEndData[element];
                li.classList.add("iso-pro");
                backend.appendChild(li)
            })
        }
    }
}

function education(educationData){
    for(let key in educationData){
        switch(key){
            case "pre-graduation":
                let graduation = document.getElementById("pre-graduation-course")
                let branch = document.getElementById("pre-graduation-branch")
                let score = document.getElementById("pre-graduation-score")
                let collage = document.getElementById("pre-graduation-college")
                let year = document.getElementById("pre-graduation-year")
                for(let key1 in educationData[key]){
                    switch(key1){
                        case "course":
                            graduation.innerText = educationData[key][key1];
                            break
                        case "branch":
                            branch.innerText = educationData[key][key1];
                            break
                        case "score":
                            score.innerText = educationData[key][key1];
                            break
                        case "collage":
                            collage.innerText = educationData[key][key1];
                            break
                        case "year":
                            year.innerText = educationData[key][key1];
                            break
                    }
                }
                // graduation.innerText = educationData[key]
                break;
            case "intermediate":{
                let graduation = document.getElementById("intermediate-course")
                let branch = document.getElementById("intermediate-branch")
                let score = document.getElementById("intermediate-score")
                let collage = document.getElementById("intermediate-college")
                for(let key1 in educationData[key]){
                    switch(key1){
                        case "course":
                            graduation.innerText = educationData[key][key1];
                            break
                        case "branch":
                            branch.innerText = educationData[key][key1];
                            break
                        case "score":
                            score.innerText = educationData[key][key1];
                            break
                        case "collage":
                            collage.innerText = educationData[key][key1];
                            break
                    }
                }
            }
                break;
            case "10th":{
                let graduation = document.getElementById("10th-course")
                let score = document.getElementById("10th-score")
                let collage = document.getElementById("10th-college")
                for(let key1 in educationData[key]){
                    switch(key1){
                        case "course":
                            graduation.innerText = educationData[key][key1];
                            break
                        case "score":
                            score.innerText = educationData[key][key1];
                            break
                        case "collage":
                            collage.innerText = educationData[key][key1];
                            break
                    }
                }
            }

                break;
        }
    }
}

function about(aboutData){
    // console.log(aboutData)
    for(let key in aboutData){
        if(key == 'img'){
            let img = document.getElementById("about-img");
            img.src=aboutData[key];
        }
        else if(key=='para'){
            let div = document.getElementById("about-para-div");
            aboutData[key].forEach(element => {
                let p = document.createElement("p");
                p.innerText = element;
                div.appendChild(p);
            });
        }
    }
}
function home(homeData){
    for(let key in homeData){
        
        if(key == "student"){
            let student = document.getElementById("student");
            student.innerText = homeData[key];
        }

        else if(key == "typing")
            startTyping(homeData[key]);

        else if(key == "para"){
            let para = document.getElementById("main-para");
            para.innerText = homeData[key];
        }
        else if(key == "resume"){
            let link = document.getElementById("resume-link");
            link.href=homeData[key]
        }
    }
}
